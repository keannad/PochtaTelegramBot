/*
 * This file is generated by jOOQ.
 */
package ru.bletenkov.pochtabot.db.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.bletenkov.pochtabot.db.tables.User;


/**
 * Зарегистрированные пользователи
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record4<Long, Long, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pochtabot.user.id</code>. Идентификатор пользователя
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pochtabot.user.id</code>. Идентификатор пользователя
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pochtabot.user.chat_id</code>. Идентификатор чата пользователя
     */
    public void setChatId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pochtabot.user.chat_id</code>. Идентификатор чата пользователя
     */
    public Long getChatId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pochtabot.user.lang</code>.
     */
    public void setLang(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pochtabot.user.lang</code>.
     */
    public String getLang() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pochtabot.user.is_admin</code>. Признак привилегированности пользователя
     */
    public void setIsAdmin(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>pochtabot.user.is_admin</code>. Признак привилегированности пользователя
     */
    public Boolean getIsAdmin() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, String, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<Long> field2() {
        return User.USER.CHAT_ID;
    }

    @Override
    public Field<String> field3() {
        return User.USER.LANG;
    }

    @Override
    public Field<Boolean> field4() {
        return User.USER.IS_ADMIN;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getChatId();
    }

    @Override
    public String component3() {
        return getLang();
    }

    @Override
    public Boolean component4() {
        return getIsAdmin();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getChatId();
    }

    @Override
    public String value3() {
        return getLang();
    }

    @Override
    public Boolean value4() {
        return getIsAdmin();
    }

    @Override
    public UserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(Long value) {
        setChatId(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setLang(value);
        return this;
    }

    @Override
    public UserRecord value4(Boolean value) {
        setIsAdmin(value);
        return this;
    }

    @Override
    public UserRecord values(Long value1, Long value2, String value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long id, Long chatId, String lang, Boolean isAdmin) {
        super(User.USER);

        setId(id);
        setChatId(chatId);
        setLang(lang);
        setIsAdmin(isAdmin);
    }
}
