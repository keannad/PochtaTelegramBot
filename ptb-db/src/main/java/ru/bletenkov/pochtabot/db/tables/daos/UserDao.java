/*
 * This file is generated by jOOQ.
 */
package ru.bletenkov.pochtabot.db.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import ru.bletenkov.pochtabot.db.tables.User;
import ru.bletenkov.pochtabot.db.tables.records.UserRecord;


/**
 * Зарегистрированные пользователи
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDao extends DAOImpl<UserRecord, ru.bletenkov.pochtabot.db.tables.pojos.User, Long> {

    /**
     * Create a new UserDao without any configuration
     */
    public UserDao() {
        super(User.USER, ru.bletenkov.pochtabot.db.tables.pojos.User.class);
    }

    /**
     * Create a new UserDao with an attached configuration
     */
    public UserDao(Configuration configuration) {
        super(User.USER, ru.bletenkov.pochtabot.db.tables.pojos.User.class, configuration);
    }

    @Override
    public Long getId(ru.bletenkov.pochtabot.db.tables.pojos.User object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ru.bletenkov.pochtabot.db.tables.pojos.User> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(User.USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ru.bletenkov.pochtabot.db.tables.pojos.User> fetchById(Long... values) {
        return fetch(User.USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ru.bletenkov.pochtabot.db.tables.pojos.User fetchOneById(Long value) {
        return fetchOne(User.USER.ID, value);
    }

    /**
     * Fetch records that have <code>chat_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ru.bletenkov.pochtabot.db.tables.pojos.User> fetchRangeOfChatId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(User.USER.CHAT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>chat_id IN (values)</code>
     */
    public List<ru.bletenkov.pochtabot.db.tables.pojos.User> fetchByChatId(Long... values) {
        return fetch(User.USER.CHAT_ID, values);
    }

    /**
     * Fetch records that have <code>lang BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ru.bletenkov.pochtabot.db.tables.pojos.User> fetchRangeOfLang(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.LANG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lang IN (values)</code>
     */
    public List<ru.bletenkov.pochtabot.db.tables.pojos.User> fetchByLang(String... values) {
        return fetch(User.USER.LANG, values);
    }

    /**
     * Fetch records that have <code>is_admin BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ru.bletenkov.pochtabot.db.tables.pojos.User> fetchRangeOfIsAdmin(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(User.USER.IS_ADMIN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_admin IN (values)</code>
     */
    public List<ru.bletenkov.pochtabot.db.tables.pojos.User> fetchByIsAdmin(Boolean... values) {
        return fetch(User.USER.IS_ADMIN, values);
    }
}
